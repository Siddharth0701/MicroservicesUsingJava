
# spring.application.name= USER-SERVICE
# server.port=8081
# spring.datasource.name=userservice

# spring.datasource.url=jdbc:postgresql://localhost:5432/microservices

# spring.datasource.username=postgres

# spring.datasource.password=root

# spring.datasource.driver-class-name=org.postgresql.Driver

# spring.jpa.property.hibernate.dialect=org.hibernate.dialect.PostgreSQL95Dialect

# spring.jpa.hibernate.ddl-auto=update

# spring.jpa.show-sql=true
# spring.config.import=optional:configserver:http://localhost:8085


# management.health.circuitbreakers.enabled=true
# management.endpoints.web.exposure.include=health,metrics
# management.endpoint.health.show-details=always
# resilience4j.circuitbreaker.instances.ratingHotelBreaker.registerHealthIndicator=true
# resilience4j.circuitbreaker.instances.ratingHotelBreaker.eventConsumerBufferSize=10
# resilience4j.circuitbreaker.instances.ratingHotelBreaker.failureRateThreshold=50
# resilience4j.circuitbreaker.instances.ratingHotelBreaker.minimumNumberOfCalls=5
# resilience4j.circuitbreaker.instances.ratingHotelBreaker.automaticTransitionFromOpenToHalfOpenEnabled=true
# resilience4j.circuitbreaker.instances.ratingHotelBreaker.waitDurationInOpenState=6s
# resilience4j.circuitbreaker.instances.ratingHotelBreaker.permittedNumberOfCallsInHalfOpenState=3
# resilience4j.circuitbreaker.instances.ratingHotelBreaker.slidingWindowSize=10
# resilience4j.circuitbreaker.instances.ratingHotelBreaker.slidingWindowType=COUNT_BASED



# resilience4j.retry.instances.ratingHotelService.max-attempts=3
# resilience4j.retry.instances.ratingHotelService.wait-duration=5s
# resilience4j.ratelimiter.instances.userRateLimiter.limit-refresh-period=4s
# resilience4j.ratelimiter.instances.userRateLimiter.limit-for-period=4
# resilience4j.ratelimiter.instances.userRateLimiter.timeout-duration=2s


# okta.oauth2.issuer=https://dev-85271902.okta.com/oauth2/default
# okta.oauth2.audience=api://default

# security.oauth2.resourceserver.jwt.issuer-uri=https://dev-85271902.okta.com/oauth2/default
# security.oauth2.client.registration.my-internal-client.provider=okta
# security.oauth2.client.registration.my-internal-client.authorization-grant-type=client_credentials
# security.oauth2.client.registration.my-internal-client.scope=internal
# security.oauth2.client.registration.my-internal-client.client-id=0oa8cap2rxL5S5oXD5d7
# security.oauth2.client.registration.my-internal-client.client-secret=9p_I-8ejEmxGM53RbZA3HUnwsNqP5hlBnnvx2De6
# security.oauth2.client.provider.okta.issuer-uri=https://dev-85271902.okta.com/oauth2/default



# #spring.profiles.active=prod



# # eureka.client.fetch-registry=true
# # euraka.instance.prefer-ip-address=true
# # eureka.client.register-with-eureka=true
# # eureka.client.serviceUrl.defaultZone=${EUREKA_URI:http://localhost:8761/eureka}
# # #eureka.client.service-url.defaultZone=http://localhost:8761/euraka




server.port=8081
spring.application.name=USER-SERVICE

spring.datasource.url=jdbc:postgresql://localhost:5432/microservices
spring.datasource.username=postgres
spring.datasource.password=root
spring.datasource.driver-class-name=org.postgresql.Driver
spring.jpa.property.hibernate.dialect=org.hibernate.dialect.PostgreSQL95Dialect
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true

spring.config.import=optional:configserver:http://localhost:8085

spring.security.oauth2.resourceserver.jwt.issuer-uri=https://dev-85271902.okta.com/oauth2/default
spring.security.oauth2.client.registration.my-internal-client.provider=okta
spring.security.oauth2.client.registration.my-internal-client.authorization-grant-type=client_credentials
spring.security.oauth2.client.registration.my-internal-client.scope=internal
spring.security.oauth2.client.registration.my-internal-client.client-id=0oa8cap2rxL5S5oXD5d7
spring.security.oauth2.client.registration.my-internal-client.client-secret=9p_I-8ejEmxGM53RbZA3HUnwsNqP5hlBnnvx2De6
spring.security.oauth2.client.provider.okta.issuer-uri=https://dev-85271902.okta.com/oauth2/default
management.health.circuitbreakers.enabled=true
management.endpoints.web.exposure.include=health
management.endpoint.health.show-details=always
resilience4j.circuitbreaker.instances.ratingHotelBreaker.registerHealthIndicator=true
resilience4j.circuitbreaker.instances.ratingHotelBreaker.eventConsumerBufferSize=10
resilience4j.circuitbreaker.instances.ratingHotelBreaker.failureRateThreshold=50
resilience4j.circuitbreaker.instances.ratingHotelBreaker.minimumNumberOfCalls=5
resilience4j.circuitbreaker.instances.ratingHotelBreaker.automaticTransitionFromOpenToHalfOpenEnabled=true
resilience4j.circuitbreaker.instances.ratingHotelBreaker.waitDurationInOpenState=6s
resilience4j.circuitbreaker.instances.ratingHotelBreaker.permittedNumberOfCallsInHalfOpenState=3
resilience4j.circuitbreaker.instances.ratingHotelBreaker.slidingWindowSize=10
resilience4j.circuitbreaker.instances.ratingHotelBreaker.slidingWindowType=COUNT_BASED
resilience4j.retry.instances.ratingHotelService.max-attempts=3
resilience4j.retry.instances.ratingHotelService.wait-duration=5s
resilience4j.ratelimiter.instances.userRateLimiter.limit-refresh-period=4s
resilience4j.ratelimiter.instances.userRateLimiter.limit-for-period=2
resilience4j.ratelimiter.instances.userRateLimiter.timeout-duration=2s

okta.oauth2.issuer=https://dev-85271902.okta.com/oauth2/default
okta.oauth2.audience=api://default
